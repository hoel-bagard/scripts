[project]
name = "taihei_technos"

[tool.poetry]
name = "scripts"
version = "0.0.1"
description = "Various utils scripts"
authors = ["Bagard Hoel"]
readme = "README.md"

[tool.poetry.scripts]
scripts-keepass_xml_to_pass = "scripts.keepass2pass:main"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
hbtools = ">=0.2.2"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
ruff = "0.0.270"
pyright = "^1.1.278"
flake8-comprehensions = "^3.12.0"
flake8-docstrings = "^1.7.0"
flake8-builtins = "^2.1.0"
flake8-quotes = "^3.3.2"
pep8-naming = "^0.13.3"
flake8-import-order = "^0.18.2"
flake8-noqa = "^1.3.1"
flake8-broken-line = "^0.6.0"
flake8-commas = "^2.1.0"
Flake8-pyproject = "^1.2.3"
codespell = "^2.2.6"

[tool.poetry.group.test]
optional = true
[tool.poetry.group.test.dependencies]
pytest = "^7.3.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = ["--import-mode=importlib",]

[tool.ruff]
select = ["ALL"]
ignore = [
  "ANN102",  # Missing type annotation for `cls` in classmethod
  "C901",    # Function is too complex.
  "D1",      # Do not require docstrings
  "D203",    # One-blank-line-before-class  (incompatible)
  "D213",    # Multi-line-summary-second-line  (incompatible)
  "D407",    # Missing dashed underline after section ("Args", "Returns")
  "ERA001",  # Found commented-out code
  "G004",    # Logging statement uses f-string
  "S311",
  "TD",
  "TRY"
]
line-length = 120

[tool.ruff.isort]
order-by-type = false
known-first-party = ["scripts"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.pylint]
max-args = 10

[tool.pyright]
include = ["src/scripts"]
ignore = ["**/__init__.py"]
venvPath = "."
venv = ".venv"
pythonVersion = "3.11"
pythonPlatform = "Linux"

strictListInference = true
strictDictionaryInference = true
strictSetInference = true
reportMissingModuleSource = false
reportMissingImports = true
reportMissingTypeStubs = false
reportUnusedImport = true
reportUnusedClass = "warning"
reportUnusedFunction = "warning"
reportUnusedVariable = "warning"
reportDuplicateImport = "warning"
reportUntypedNamedTuple = "warning"
reportUntypedFunctionDecorator = "warning"
reportUntypedClassDecorator = "warning"
reportMissingSuperCall = false
reportUnknownArgumentType = "warning"
reportUnknownLambdaType = "warning"
reportUnknownVariableType = "warning"
reportUnknownMemberType = false
reportMissingParameterType = "warning"
reportMissingTypeArgument = "warning"
reportCallInDefaultInitializer = false
reportUnnecessaryIsInstance = "warning"
reportUnnecessaryCast = "warning"
reportUnnecessaryComparison = "warning"
reportImplicitStringConcatenation = false
reportUnusedCallResult = false
reportUnusedExpression = "warning"
reportUnnecessaryTypeIgnoreComment = "warning"
reportMatchNotExhaustive = "warning"

[tool.flake8]
max-line-length = 120
docstring-convention = "google"
import-order-style = "smarkets"
inline-quotes = "double"
exclude = ["env", "venv", ".venv"]
ignore = ["D1", "E226", "F405", "NQA102", "W503"]

[tool.pylint.messages_control]
max-line-length = 120
disable = [
    "no-member",
    "import-outside-toplevel",
]